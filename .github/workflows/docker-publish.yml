name: Docker

on:
  push:
    # Publish `main` as Docker `staging` image.
    branches:
      - main

    # Publish `v1.2.3` && latest tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker-compose --file docker-compose.build.yml build --parallel
    

  build-push:
    needs: [test]

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker-compose --file docker-compose.build.yml build --parallel --compress

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push image
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `staging` tag convention
          [ "$VERSION" == "main" ] && VERSION=staging

          echo VERSION=$VERSION
          docker-compose --file docker-compose.yml push
      
          if [ "$VERSION" != "staging" ]; then
            VERSION=latest docker-compose --file docker-compose.yml build
            VERSION=latest docker-compose --file docker-compose.yml push
          fi
